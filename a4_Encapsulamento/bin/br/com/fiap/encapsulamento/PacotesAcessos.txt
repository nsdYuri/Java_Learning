Pacotes: 
São um mecanismo de proposito geral para organizar elementos em grupos.
Um elemento do modelo que pode conter outros elementos do
modelo.

O pacote pode ser usado para organizar o modelo em desenvolvimento.
Pode servir como uma unidade de gerenciamento de configuração.
Um pacote pode conter classes e outros pacotes.

Pacotes permitem a criação de espaços de nomes, além de
mecanismos de controle de acesso, são ão tipicamente implementados como diretórios.
Os arquivos das classes pertencentes ao pacote devem ficar
em seu diretório
Hierarquias de pacotes são construídas através de hierarquias
de diretórios

Importação de pacotes:
Podemos usar o nome simples (não qualificado) de uma classe que
pertença a um pacote se importarmos a classe
A importação de uma classe (ou classes de um pacote) pode ser feita no
início do arquivo, após a declaração do pacote


Modificadores de acesso:
As linguagens OO disponibilizam formas de controlar o acesso aos
membros (atributos e métodos) de uma classe. No mínimo, podemos
controlar o que é público ou privado.

O java por sua vez disponibiza 3 modificadores de acesso: private, public e protected
Quando nenhum modificador é utilizado, dizemos que o membro está
com o nível de acesso default, também conhecido como package.
Públicos podem ser acessados por todos, enquanto os
privados só podem ser acessados pela própria classe.

Private: 
Atributos e métodos são acessíveis somente nos métodos
da própria classe.
Este é o nível mais rígido de encapsulamento.

Protected:
Atributos e métodos são acessíveis nos métodos da
própria classe e suas subclasses

Public:
Atributos e métodos são acessíveis em todos os métodos
de todas as classes.
Este é o nível menos rígido de encapsulamento

Representação de cada modificador em um diagrama de classes

- (private)
# (protected)
+ (public)



 